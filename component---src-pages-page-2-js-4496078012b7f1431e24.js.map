{"version":3,"sources":["webpack:///./src/components/DataBuilder/index.js","webpack:///./src/components/DataBuilder/DataBuilder.js","webpack:///./src/pages/page-2.js"],"names":["DataBuilder","children","data","useState","loading","setLoading","content","setContent","xAxisLabel","interval","min","max","useEffect","ref","temp","order","counter","allWorldHappiness2015Json","edges","map","i","score","node","Happiness_Score","index","Math","round","from","to","key","value","push","result","label","console","log","chartId","xAxisLabels","SecondPage"],"mappings":"gJACeA,ECIK,SAAC,GAAiB,EAAfC,SAAgB,IAC/BC,EAAI,OAD0B,EAaNC,oBAAS,GAAhCC,EAb6B,KAapBC,EAboB,OAcNF,mBAAS,IAAhCG,EAd6B,KAcpBC,EAdoB,OAeAJ,mBAAS,IAAtCK,EAf6B,aAgBJL,mBAAS,IAAlCM,EAhB6B,aAiBdN,mBAAS,IAAxBO,EAjB6B,aAkBdP,mBAAS,KAAxBQ,EAlB6B,UAgDpC,OA5BAC,qBAAU,WACR,IAAIC,EAAM,GACNC,EAAO,GACPC,EAAQ,GACZ,GAAIX,EAAS,CACX,IAAIY,EAAU,EACdd,EAAKe,0BAA0BC,MAC5BC,KAAI,WAAuCC,GAAO,IAAlBC,EAAiB,EAA1CC,KAAQC,gBACRC,EAAQC,KAAKC,MAAML,EAAQZ,GAC7BK,EAAKU,GAAQV,EAAKU,KACjBV,EAAKU,GAAS,KAEvB,IAAK,IAAIG,EAAOjB,EAAKiB,GAAQhB,EAAKgB,GAAQlB,EAAU,CAClD,IAAImB,EAAKD,EAAOlB,EAAW,EACvBmB,EAAKjB,IAAKiB,EAAKjB,GACnB,IAAMkB,EAAOF,IAASC,EAAV,GAAmBA,EAAUD,EAA7B,IAAqCC,EAC3CE,EAAQhB,EAAKE,KACnBH,EAAIgB,GAAOC,GAAgB,EAC3Bf,EAAMgB,KAAKF,GAEb,IAAMG,EAASjB,EAAMI,KAAI,SAAAU,GAAG,MAAK,CAAEI,MAAOJ,EAAKC,MAAOjB,EAAIgB,OAC1DtB,EAAWyB,GACX3B,GAAW,MAEZ,CAACH,EAAKe,0BAA0BC,QAEnCgB,QAAQC,IAAI7B,IAGTF,GAAW,kBAAC,IAAD,CAAUgC,QAAQ,sBAAsBlC,KAAMI,EAAS+B,YAAa7B,KC5CrE8B,UAJI,kBACjB,kBAAC,EAAD,Q","file":"component---src-pages-page-2-js-4496078012b7f1431e24.js","sourcesContent":["import DataBuilder from './DataBuilder'\nexport default DataBuilder\n","import React, { useEffect, useState } from 'react'\n// import PropTypes from 'prop-types'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport { BarChart } from '../Module'\n\nconst DataBuilder = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query WorldHappinessQuery {\n      allWorldHappiness2015Json {\n        edges {\n          node {\n            Happiness_Score\n          }\n        }\n      }\n    }\n  `)\n\n  const [loading, setLoading] = useState(true)\n  const [content, setContent] = useState([])\n  const [xAxisLabel, setxAxisLabel] = useState([])\n  const [interval, setInterval] = useState(2)\n  const [min, setMin] = useState(0)\n  const [max, setMax] = useState(10)\n\n  useEffect(() => {\n    let ref = {}\n    let temp = []\n    let order = []\n    if (loading) {\n      let counter = 0\n      data.allWorldHappiness2015Json.edges\n        .map(({ node: { Happiness_Score: score } }, i) => {\n          const index = Math.round(score / interval)\n          if (temp[index]) temp[index]++\n          else temp[index] = 1\n        })\n      for (let from = min; from <= max; from += interval) {\n        let to = from + interval - 1\n        if (to > max) to = max\n        const key = (from === to) ? `${to}` : `${from}-${to}`\n        const value = temp[counter++]\n        ref[key] = value ? value : 0\n        order.push(key)\n      }\n      const result = order.map(key => ({ label: key, value: ref[key] }))\n      setContent(result)\n      setLoading(false)\n    }\n  }, [data.allWorldHappiness2015Json.edges])\n\n  console.log(content)\n\n  return (\n    !loading && <BarChart chartId='happiness-score-bin' data={content} xAxisLabels={xAxisLabel} />\n  )\n}\n\nexport default DataBuilder\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport DataBuilder from \"../components/DataBuilder\"\n// import SEO from \"../components/seo\"\n\nconst SecondPage = () => (\n  <DataBuilder />\n)\n\nexport default SecondPage\n"],"sourceRoot":""}